{
  "version": 3,
  "sources": ["../../docs/src/class/Brush.js", "../../docs/src/tools/randomIntInRange.js", "../../docs/src/brushes/NerdsRope.js", "../../docs/src/brushes/Plants.js", "../../docs/src/tools/attachBrush.js", "../../docs/src/tools/clearCanvas.js", "../../docs/src/index.js"],
  "sourcesContent": ["export default class Brush {\n  constructor(x, y, override = null) {\n    this.x = x;\n    this.y = y;\n    this.x = x;\n    this.y = y;\n    this.speedX = override?.speedX ?? Math.random() * 4 - 2;\n    this.speedY = override?.speedY ?? Math.random() * 4 - 2;\n    this.maxSize = override?.maxSize ?? Math.random() * 7 + 5;\n    this.size = override?.size ?? Math.random() * 1 + 2;\n  }\n  update(animate) {\n  }\n}\n", "export default function randomIntInRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n", "import Brush from \"../class/Brush.js\";\nimport randomIntInRange from \"../tools/randomIntInRange.js\";\nconst canvas = document.querySelector(\"#canvas\");\nconst ctx = canvas.getContext(\"2d\");\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\nexport default class NerdsRope extends Brush {\n  update(animate = false) {\n    this.x += this.speedX;\n    this.y += this.speedY;\n    this.size += Math.random() * 0.2 - 0.1;\n    if (this.size < this.maxSize && ctx instanceof CanvasRenderingContext2D) {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fillStyle = `hsl(${randomIntInRange(1, 150)},${randomIntInRange(1, 150)}%,50%)`;\n      ctx.fill();\n      ctx.stroke();\n      if (animate)\n        requestAnimationFrame(this.update.bind(this, true));\n    }\n    if (this.x > canvas.width - this.size || this.x < 0) {\n      this.speedX = -this.speedX;\n    }\n    if (this.y > canvas.height - this.size || this.y < 0) {\n      this.speedY = -this.speedY;\n    }\n  }\n}\n", "import Brush from \"../class/Brush.js\";\nimport randomIntInRange from \"../tools/randomIntInRange.js\";\nconst canvas = document.querySelector(\"#canvas\");\nconst ctx = canvas.getContext(\"2d\");\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\nclass Flower {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.growthVelocity = Math.random() * 0.3 + 0.2;\n    this.maxFlowerSize = this.size + Math.random() * 100;\n    this.image = new Image();\n    this.image.src = \"/src/assets/flowers.png\";\n    this.frameSize = 100;\n    this.frameY = Math.floor(Math.random() * 3);\n    this.frameX = Math.floor(Math.random() * 3);\n    this.willFlower = this.size > 11.5;\n    this.angle = 0;\n    this.angleVelocity = Math.random() * 0.05 - 0.025;\n  }\n  grow() {\n    if (this.size < this.maxFlowerSize && this.willFlower) {\n      this.size += this.growthVelocity;\n      this.angle += this.angleVelocity;\n      ctx.save();\n      ctx.translate(this.x, this.y);\n      ctx.rotate(this.angle);\n      ctx.drawImage(this.image, this.frameSize * this.frameX, this.frameSize * this.frameY, this.frameSize, this.frameSize, 0 - this.size / 2, 0 - this.size / 2, this.size, this.size);\n      ctx.restore();\n      requestAnimationFrame(this.grow.bind(this));\n    }\n  }\n}\nexport default class Plants extends Brush {\n  constructor(x, y, override = null) {\n    super(x, y, override);\n    this.velocitySize = override?.velocitySize ?? Math.random() * 0.1 + 0.05;\n    this.angleX = override?.angleX ?? Math.random() * 6.2;\n    this.angleY = override?.angleY ?? Math.random() * 6.2;\n    this.velocityX = override?.velocityX ?? Math.random() * 0.6 - 0.022;\n    this.velocityY = override?.velocityY ?? Math.random() * 0.6 - 0.03;\n    this.lightness = override?.lightness ?? 10;\n  }\n  update(animate = false) {\n    this.x += this.speedX + Math.sin(this.angleX);\n    this.y += this.speedY + Math.sin(this.angleY);\n    this.size += this.velocitySize;\n    this.angleX += this.velocityX;\n    this.angleY += this.velocityY;\n    if (this.lightness < 70)\n      this.lightness++;\n    if (this.size < this.maxSize && ctx instanceof CanvasRenderingContext2D) {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fillStyle = `hsl(140,${randomIntInRange(50, 150)}%,${this.lightness}%)`;\n      ctx.fill();\n      ctx.stroke();\n      if (animate)\n        requestAnimationFrame(this.update.bind(this, true));\n    } else {\n      const flower = new Flower(this.x, this.y, this.size + 1);\n      flower.grow();\n    }\n    if (this.x > canvas.width - this.size || this.x < 0) {\n      this.speedX = -this.speedX;\n    }\n    if (this.y > canvas.height - this.size || this.y < 0) {\n      this.speedY = -this.speedY;\n    }\n  }\n}\n", "export default function attachBrush(e, brush, animate = false, loops = 1) {\n  for (let i = 0; i < loops; i++) {\n    const activeBrush = new brush(e.clientX, e.clientY);\n    activeBrush.update(animate);\n  }\n}\n", "export default function clearCanvas() {\n  const canvas = document.querySelector(\"#canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  if (ctx instanceof CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n}\n", "import NerdsRope from \"./brushes/NerdsRope.js\";\nimport Plants from \"./brushes/Plants.js\";\nimport attachBrush from \"./tools/attachBrush.js\";\nimport clearCanvas from \"./tools/clearCanvas.js\";\nlet drawing = false, animate = false, brush = NerdsRope, loops = 1, lineWidth = 1;\nconst canvas = document.querySelector(\"#canvas\");\nconst ctx = canvas.getContext(\"2d\");\nconst filterSelect = document.querySelector(\"#filter\");\nfilterSelect.addEventListener(\"change\", (event) => {\n  ctx.globalCompositeOperation = event.target.value;\n});\nconst brushSelect = document.querySelector(\"#brush\");\nbrushSelect.addEventListener(\"change\", (event) => {\n  if (event.target.value === \"NerdsRope\")\n    brush = NerdsRope;\n  else\n    brush = Plants;\n});\nconst lineWidthInput = document.querySelector(\"#lineWidth\");\nlineWidthInput.addEventListener(\"change\", (event) => {\n  lineWidth = event.target.value;\n  ctx.lineWidth = lineWidth;\n});\nconst loopsInput = document.querySelector(\"#loops\");\nloopsInput.addEventListener(\"change\", (event) => {\n  loops = event.target.value;\n});\nconst animateCheckbox = document.querySelector(\"#animate\");\nanimateCheckbox.addEventListener(\"change\", (event) => {\n  animate = event.target.checked;\n});\nwindow.addEventListener(\"mousemove\", (e) => {\n  if (drawing)\n    attachBrush(e, brush, animate, loops);\n});\nwindow.addEventListener(\"mousedown\", () => drawing = true);\nwindow.addEventListener(\"mouseup\", () => drawing = false);\nwindow.addEventListener(\"keyup\", (e) => {\n  if (e.key === \"a\") {\n    animate = animate ? false : true;\n    animateCheckbox.checked = animate;\n  }\n  if (e.key === \"+\") {\n    loops++;\n    loopsInput.value = loops.toString();\n  }\n  if (e.key === \"-\" && loops > 1) {\n    loops--;\n    loopsInput.value = loops.toString();\n  }\n  if (e.key === \"c\") {\n    clearCanvas();\n  }\n  if (e.key === \"1\") {\n    brush = NerdsRope;\n    brushSelect.value = \"NerdsRope\";\n  }\n  if (e.key === \"2\") {\n    brush = Plants;\n    brushSelect.value = \"Plants\";\n  }\n  if (e.key === \"t\") {\n    const filterChoice = [\"lighten\", \"multiply\", \"screen\", \"overlay\", \"darken\", \"color-dodge\", \"color-burn\", \"hard-light\", \"soft-light\", \"difference\", \"exclusion\", \"hue\", \"saturation\", \"color\", \"luminosity\"][Math.floor(Math.random() * 10)];\n    ctx.globalCompositeOperation = filterChoice;\n    filterSelect.value = filterChoice;\n  }\n  if (e.key === \"g\") {\n    lineWidth += 0.1;\n    ctx.lineWidth = lineWidth;\n    lineWidthInput.value = ctx.lineWidth.toString();\n  }\n  if (e.key === \"b\") {\n    lineWidth -= 0.1;\n    ctx.lineWidth = lineWidth;\n    lineWidthInput.value = ctx.lineWidth.toString();\n  }\n});\n"],
  "mappings": "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",
  "names": []
}
